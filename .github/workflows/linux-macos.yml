# setup @see https://help.github.com/en/articles/workflow-syntax-for-github-actions
# environment @see https://help.github.com/en/articles/software-in-virtual-environments-for-github-actions
#                  https://help.github.com/en/articles/virtual-environments-for-github-actions
# example     @see https://github.com/actions/toolkit/blob/master/.github/workflows/workflow.yml
name: Linux & macOS Building
# This workflow is triggered on pushes to the repository.
on: # @see https://help.github.com/en/articles/events-that-trigger-workflows#webhook-events
  push:
    branches: # Array of patterns that match refs/heads
      - master # Push events on master branch
      - dev
      - main
  # schedule:
  #  - cron:  0 * * * *

jobs:
  build: # job id, can be any string
    # Job name is Build And Publish
    name: Build And Test
    # This job runs on Linux
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            triplet: x64-linux
            cc: gcc
          - os: ubuntu-20.04
            triplet: x64-linux
            cc: gcc-10
          - os: ubuntu-20.04
            triplet: x64-linux
            cc: clang
          - os: ubuntu-20.04
            triplet: x64-linux
            cc: clang-11
          # - os: macos-latest
          #   triplet: x64-osx
          #   cc: clang     
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2 # https://github.com/actions/actions
      - name: Build & Test
        shell: bash
        env:
          USE_CC: ${{ matrix.cc }}
          VCPKG_TARGET_TRIPLET: ${{ matrix.triplet }}
        run: |
          vcpkg install --triplet=$VCPKG_TARGET_TRIPLET openssl ;
          vcpkg install --triplet=$VCPKG_TARGET_TRIPLET protobuf ;
          vcpkg install --triplet=$VCPKG_TARGET_TRIPLET fmt ;
          vcpkg install --triplet=$VCPKG_TARGET_TRIPLET libuv ;
          bash cmake_dev.sh -lus -b RelWithDebInfo -r build_jobs_ci -c $USE_CC -- -DCMAKE_TOOLCHAIN_FILE=$VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=$VCPKG_TARGET_TRIPLET -DATBUS_MACRO_ABORT_ON_PROTECTED_ERROR=ON -DPROJECT_GIT_CLONE_REMOTE_ORIGIN_DISABLE_SSH=ON ;
          cd build_jobs_ci ;
          cmake --build . -j ;
          ctest . -V
      - name: Cache packages
        uses: actions/cache@v2
        with:
          path: |
            /usr/local/share/vcpkg/installed
          key: ${{ runner.os }}-${{ hashFiles('/usr/local/share/vcpkg/installed/**') }}
